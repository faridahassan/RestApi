<?php

namespace BackendBundle\DAO;
use Doctrine\ORM\EntityRepository;

/**
 * PropertyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    public function getNewsFeedbyCountry( $country  , $limit ,  $page)
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
                        ->Where( 'u.country = :country' )
                        ->orderBy('p.created', 'DESC')
                        ->setParameter('country', $country )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
       return $query->getQuery()->getResult();
        
       
    }
     public function getNewsFeedGlobally( $country , $limit, $page )
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
//                        ->Where( 'u.country NOT LIKE :country' )
                        ->orderBy('p.created', 'DESC')
//                        ->setParameter('country', $country )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
       return $query->getQuery()->getResult();
    }
    public function getNewsFeedbyIndustry( $industry , $limit , $page )
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
                        ->Where( 'u.industry = :industry' )
                        ->orderBy('p.created', 'DESC')
                        ->setParameter('industry', $industry )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
        return $query->getQuery()->getResult();
    }
    public function getNewsFeedbyIndustryGlobally( $industry , $limit , $page )
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
                        ->Where( 'u.industry = :industry' )
//                        ->andWhere( 'u.country NOT LIKE :country' )
                        ->orderBy('p.created', 'DESC')
                        ->setParameter('industry', $industry )
//                        ->setParameter('country', $country )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
                        
        return $query->getQuery()->getResult();
    }
    public function getNewsFeedbyIndustryLocally( $industry ,$country, $limit , $page )
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
                        ->Where( 'u.industry = :industry' )
                        ->andWhere( 'u.country = :country' )
                        ->orderBy('p.created', 'DESC')
                        ->setParameter('industry', $industry )
                        ->setParameter('country', $country )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
        return $query->getQuery()->getResult();
    }
    public function getNewsFeedbyTypeGlobally( $type , $limit , $page )
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
                        ->Where( 'p.type = :type' )
//                        ->andWhere( 'u.country NOT LIKE :country' )
                        ->orderBy('p.created', 'DESC')
                        ->setParameter('type', $type )
//                        ->setParameter('country', $country )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
                        
        return $query->getQuery()->getResult();
    }
    public function getNewsFeedbyTypeLocally( $type , $country, $limit , $page )
    {
        $query = $this->createQueryBuilder('p')
                        ->select('p')
                        ->Join('p.user', 'u')
                        ->Where( 'p.type = :type' )
                        ->andWhere( 'u.country = :country' )
                        ->orderBy('p.created', 'DESC')
                        ->setParameter('type', $type )
                        ->setParameter('country', $country )
                        ->setFirstResult($limit * ($page - 1)) // Offset
                        ->setMaxResults($limit); 
                        
        return $query->getQuery()->getResult();
   
    }
 
     
}
